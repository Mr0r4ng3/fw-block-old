# Generated by Django 5.0.7 on 2024-07-10 17:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Firewall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ip', models.GenericIPAddressField(unique=True)),
                ('context', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='IpAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(unique=True)),
                ('country', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('asn', models.CharField(max_length=100)),
                ('organization', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Blocked',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_blocked', models.BooleanField(default=True)),
                ('blocked_at', models.DateTimeField(auto_now_add=True)),
                ('unblocked_at', models.DateTimeField(null=True)),
                ('firewall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fw_block.firewall')),
                ('ip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fw_block.ipaddress')),
            ],
        ),
        migrations.AddField(
            model_name='firewall',
            name='blocked_ips',
            field=models.ManyToManyField(related_name='blocked_in', through='fw_block.Blocked', to='fw_block.ipaddress'),
        ),
    ]
